# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    restoreNugetPackages: true
    createLogFile: true

- task: CmdLine@2
  inputs:
    script: |
      mkdir bin
      nuget install ILMerge -ExcludeVersion
      cd ILMerge\tools\net452
      xcopy ..\..\..\AutoLegalityMod\bin\Release\AutoModPlugins.dll .\
      xcopy ..\..\..\QRPlugins\bin\Release\net46\BouncyCastle.CryptoExt.dll .\
      xcopy ..\..\..\QRPlugins\bin\Release\net46\zxing.dll .\
      xcopy ..\..\..\QRPlugins\bin\Release\net46\zxing.presentation.dll .\
      xcopy ..\..\..\QRPlugins\bin\Release\net46\QRCoder.dll .\
      xcopy ..\..\..\QRPlugins\bin\Release\net46\QRPlugins.dll .\
      xcopy ..\..\..\AutoLegalityMod\bin\Release\PKHeX.Core.AutoMod.dll .\
      xcopy ..\..\..\AutoLegalityMod\bin\Release\PKHeX.Core.dll .\
      ilmerge /targetplatform:v4,"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6" /out:$(Agent.BuildDirectory)\s\bin\AutoModPlugins.dll AutoModPlugins.dll PKHeX.Core.AutoMod.dll
      ilmerge /targetplatform:v4,"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6" /out:$(Agent.BuildDirectory)\s\bin\QRPlugins.dll QRPlugins.dll PKHeX.Core.AutoMod.dll BouncyCastle.CryptoExt.dll QRCoder.dll zxing.dll zxing.presentation.dll

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      
      cd $(Agent.BuildDirectory)
      echo $(ls)
      
      cd $(Build.SourcesDirectory)
      echo $(ls)

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Agent.BuildDirectory)\s\bin'
    ArtifactName: 'PKHeX-Plugins'
    publishLocation: 'Container'